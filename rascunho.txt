    unsigned char *image_matrix[imagem.colunas][imagem.linhas] = &image[imagem.offset];

    for(int i = 0; i < imagem.colunas; i++){
       for(int j = 0; j < imagem.linhas; j++){
         printf("%02X ", image_matrix[i][j]);
       }
       printf("\n");
    } 
    for(int i = 0, k = 0; i < imagem.linhas; i++){
        for(int j = 0; j < image.colunas; j++){
            printf("%d - Red: %02x (%d) ", l, image[i], j);
            k += 3;
        }
    }



/*

struct RGB compacta_lossy(int len_x, int len_y, unsigned char matriz[len_y][len_x], int soma_x, int soma_y){
    printf("\nEnd\n\n");

    int setor_x = len_x / 2;
    int setor_y = len_y / 2;
    if( setor_x >= 3 && setor_y / 2 >= 3){
      // compacta_lossy(setor_x, setor_y, matriz);
    }    //compacta_lossy(imagem.linhas, imagem.colunas, imagem_matriz);

        /*int i, j = 0;
        for(i = 0; i < 0x36; i++)
            printf("%02X ", image[i]);
        printf("\n");
        for(i=0; i < 20; i++)
        {
          for (j=0; j<22; j++)
            printf("%02X%02x%02x ", image[0x36+i*22*3+j*3], image[0x36+i*22*3+j*3+1], image[0x36+i*22*3+j*3+2]);
        printf ("\n");
        }


            unsigned char (*imagem_matriz)[imagem.linhas] = (unsigned char (*)[imagem.linhas])&image[imagem.offset];

}*/





int acc = 0 ;
    for(int i = 0, j = 0, l = 0; i < ((imagem.colunas) * (imagem.linhas)) * 3; i++){
        if(i % 3 == 0){
            matriz[l][j].azul = image[i];
            printf("%d - Green: %02x (%d) ", l, image[i], j);
        }
        else if(i % 3 == 1){
            matriz[l][j].verde =  image[i];
            printf("Red: %02x (%d) ", image[i], j);
        }
        else{
            matriz[l][j].vermelho = image[i];
            printf("Blue: %02x (%d) |%d, %d|\n", image[i], j, l % 4, l);
            j++;
            if(j == imagem.colunas){
                j = 0;
                l++;

                if(l % 4 == 0)
                acc++;
            }
        }  

    }